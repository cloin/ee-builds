name: PR EE Build and Test

on:
  pull_request:
    # paths:
    #   - 'ee-builds/**'
  push:
    branches:
    #   - main
      - pr-build-workflow
    # paths:
    #   - 'ee-builds/**'
  workflow_dispatch:
    inputs:
      base_ref:
        description: 'Base ref'
        required: true
      head_ref:
        description: 'Head ref'
        required: true

jobs:
  prepare-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Generate matrix
      id: generate-matrix
      run: |
        echo $GITHUB_BASE_REF
        echo $GITHUB_HEAD_REF
        python -u .github/workflows/generate_matrix.py > matrix.json

    - name: Read matrix
      id: set-matrix
      run: |
        MATRIX_JSON=$(cat matrix.json)
        echo "::set-output name=matrix::$MATRIX_JSON"

    - name: Print matrix output
      run: |
        echo "${{ steps.set-matrix.outputs.matrix }}"

  build-and-test:
    needs: [prepare-matrix]
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    environment: deploy
    strategy:
      matrix: ${{fromJson(needs.prepare-matrix.outputs.matrix)}}
      fail-fast: false
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Install python requirements (ansible-builder)
        run: pip install -r requirements.txt

      - name: Define environment variables
        run: |
          echo "EE=${{ matrix.ee }}" >> $GITHUB_ENV
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          echo "IMAGE_TAG=pr-${{ github.event.number }}-$SHORT_SHA" >> $GITHUB_ENV

      - name: Log in to quay.io
        uses: redhat-actions/podman-login@v1
        with:
          registry: quay.io
          username: ${{ secrets.REDHAT_USERNAME }}
          password: ${{ secrets.REDHAT_PASSWORD }}

      - name: Log in to registry.redhat.io
        uses: redhat-actions/podman-login@v1
        with:
          registry: registry.redhat.io
          username: ${{ secrets.REDHAT_USERNAME }}
          password: ${{ secrets.REDHAT_PASSWORD }}

      - name: Substitute token for automation hub
        run: |
          sed -i "s/my_ah_token/${{ secrets.AH_TOKEN }}/1" ansible.cfg

      - name: Build image
        working-directory: ${{ matrix.ee }}
        run: |
          ansible-builder build -v 3 \
          --build-arg AH_TOKEN=${{ secrets.AH_TOKEN }} \
          --context=../${{ env.EE }} \
          --tag=${{ env.EE }}:${{ env.IMAGE_TAG }} \
          --tag=${{ env.EE }}:${{ github.sha }}

      - name: Push To quay.io
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ env.EE }}
          tags: ${{ env.IMAGE_TAG }} ${{ github.sha }}
          registry: quay.io/${{ secrets.QUAY_USER }}/
          username: ${{ secrets.REDHAT_USERNAME }}
          password: ${{ secrets.REDHAT_PASSWORD }}

      - name: Save Pull Command
        uses: actions/upload-artifact@v2
        with:
          name: pull-command-${{ matrix.ee }}
          path: pull-command.txt
        run: |
          echo "podman pull quay.io/${{ secrets.QUAY_USER }}/${{ env.EE }}:${{ env.IMAGE_TAG }}" > pull-command.txt

      # - name: Comment on PR with Pull Command
      #   if: github.event_name == 'pull_request'
      #   uses: actions/github-script@v5
      #   with:
      #     script: |
      #       const pullCommand = `podman pull quay.io/${{ secrets.QUAY_USER }}/${{ env.EE }}:${{ env.IMAGE_TAG }}`;
      #       const commentBody = `:rocket: **EE Image Built** :rocket:\n\nYou can pull the built image using the following command:\n\`\`\`\n${pullCommand}\n\`\`\``;
      #       const prNumber = context.issue.number;
      #       const repo = context.repo;
      #       github.rest.issues.createComment({
      #         ...repo,
      #         issue_number: prNumber,
      #         body: commentBody
      #       });

      - name: Print summary
        run: |
          EE="${{ matrix.ee }}"
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          IMAGE_TAG="pr-${{ github.event.number }}-$SHORT_SHA"
          echo "## :rocket: Usage" >> $GITHUB_STEP_SUMMARY
          echo "Image pushed to repository: quay.io/${{ secrets.QUAY_USER }}/$EE:$IMAGE_TAG" >> $GITHUB_STEP_SUMMARY
          echo "> \`podman pull quay.io/${{ secrets.QUAY_USER }}/$EE:$IMAGE_TAG\`" >> $GITHUB_STEP_SUMMARY


      # - name: Update Latest Tag on Merge
      #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      #   run: |
      #     EE="${{ matrix.ee }}"
      #     SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
      #     IMAGE_TAG="pr-${{ github.event.number }}-$SHORT_SHA"
      #   #   podman tag $EE:$IMAGE_TAG $EE:latest
      #   #   podman push $EE:latest quay.io/${{ secrets.QUAY_USER }}/$EE
