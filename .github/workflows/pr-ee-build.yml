name: PR EE Build and Test

on:
  pull_request:
    # paths:
    #   - 'ee-builds/**'
  push:
    branches:
    #   - main
      - pr-build-workflow
    # paths:
    #   - 'ee-builds/**'

jobs:
  prepare-matrix:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Identify Changed EEs
        id: set-matrix
        run: |
          git fetch --no-tags --depth=1 origin +refs/heads/*:refs/remotes/origin/* +refs/tags/*:refs/tags/*
          CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}...${{ github.sha }})
          CHANGED_EES=""

          for file in $CHANGED_FILES; do
            if [[ $file == ee-builds/* ]]; then
              EE_DIR=$(echo $file | cut -d'/' -f2)
              if [[ ! $CHANGED_EES =~ (^|[[:space:]])$EE_DIR($|[[:space:]]) ]]; then
                CHANGED_EES+="$EE_DIR "
              fi
            fi
          done

          CHANGED_EES=$(echo $CHANGED_EES | xargs)
          echo "::set-output name=matrix::{\"include\":$(echo $CHANGED_EES | jq -R -s -c 'split(" ") | map({ee: .})')}"

  build-and-test:
    needs: [prepare-matrix]
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    environment: deploy
    strategy:
      matrix: ${{fromJson(needs.prepare-matrix.outputs.matrix)}}
      fail-fast: false
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Install python requirements (ansible-builder)
        run: pip install -r requirements.txt

      - name: Log in to quay.io
        uses: redhat-actions/podman-login@v1
        with:
          registry: quay.io
          username: ${{ secrets.REDHAT_USERNAME }}
          password: ${{ secrets.REDHAT_PASSWORD }}

      - name: Log in to registry.redhat.io
        uses: redhat-actions/podman-login@v1
        with:
          registry: registry.redhat.io
          username: ${{ secrets.REDHAT_USERNAME }}
          password: ${{ secrets.REDHAT_PASSWORD }}

      - name: Substitute token for automation hub
        run: |
          sed -i "s/my_ah_token/${{ secrets.AH_TOKEN }}/1" ansible.cfg

      - name: Build image
        working-directory: ${{ matrix.ee }}
        run: |
          EE="${{ matrix.ee }}"
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          IMAGE_TAG="pr-${{ github.event.number }}-$SHORT_SHA"
          ansible-builder build -v 3 \
          --build-arg AH_TOKEN=${{ secrets.AH_TOKEN }} \
          --context=../$EE \
          --tag=$EE:$IMAGE_TAG \
          --tag=$EE:${{ github.sha }}

      - name: Push To quay.io
        uses: redhat-actions/push-to-registry@v2
        with:
          image: $EE
          tags: $IMAGE_TAG,${{ github.sha }}
          registry: quay.io/${{ secrets.QUAY_USER }}/
          username: ${{ secrets.REDHAT_USERNAME }}
          password: ${{ secrets.REDHAT_PASSWORD }}

      - name: Print summary
        run: |
          EE="${{ matrix.ee }}"
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          IMAGE_TAG="pr-${{ github.event.number }}-$SHORT_SHA"
        #   echo "## :rocket: Usage" >> $GITHUB_STEP_SUMMARY
        #   echo "Image pushed to repository: quay.io/${{ secrets.QUAY_USER }}/$EE:$IMAGE_TAG" >> $GITHUB_STEP_SUMMARY
        #   echo "> \`podman pull quay.io/${{ secrets.QUAY_USER }}/$EE:$IMAGE_TAG\`" >> $GITHUB_STEP_SUMMARY
        #   echo "## :pushpin: Ansible info:" >> $GITHUB_STEP_SUMMARY
        #   ansible --version >> $GITHUB_STEP_SUMMARY
        #   echo "## :pushpin: Installed collections:" >> $GITHUB_STEP_SUMMARY
        #   ansible-galaxy collection list >> $GITHUB_STEP_SUMMARY
        #   echo "## :pushpin: Containerfile:" >> $GITHUB_STEP_SUMMARY
        #   cat ee-builds/$EE/Containerfile >> $GITHUB_STEP_SUMMARY

      - name: Update Latest Tag on Merge
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          EE="${{ matrix.ee }}"
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          IMAGE_TAG="pr-${{ github.event.number }}-$SHORT_SHA"
        #   podman tag $EE:$IMAGE_TAG $EE:latest
        #   podman push $EE:latest quay.io/${{ secrets.QUAY_USER }}/$EE
